/* ==========================================================
 * iSPD : iconic Simulator of Parallel and Distributed System
 * ==========================================================
 *
 * (C) Copyright 2010-2014, by Grupo de pesquisas em Sistemas Paralelos e Distribuídos da Unesp (GSPD).
 *
 * Project Info:  http://gspd.dcce.ibilce.unesp.br/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.]
 *
 * ---------------
 * JUsuarios.java
 * ---------------
 * (C) Copyright 2014, by Grupo de pesquisas em Sistemas Paralelos e Distribuídos da Unesp (GSPD).
 *
 * Original Author:  Denison Menezes (for GSPD);
 * Contributor(s):   -;
 *
 * Changes
 * -------
 * Created on 01/06/2011
 * 09-Set-2014 : Version 2.0;
 *
 */
package ispd.gui;

import java.util.HashMap;
import java.util.HashSet;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Janela usada para adicionar e remover os usuarios da simulação modelada
 * @author denison
 */
public class JUsuarios extends javax.swing.JDialog {

    private ResourceBundle palavras;

    /** Creates new form ControleUsuarios */

    public JUsuarios(java.awt.Frame parent, boolean modal, HashSet<String> usuarios, ResourceBundle palavras, HashMap<String, Double> perfil) {
        super(parent, modal);
        this.usuarios = new Vector<Vector>();
        this.perfis = new Vector<String>();
        this.perfis.add("Users");
        this.perfis.add("Limite de Consumo (Porcentagem do consumo da porção)");
        for (String usuario : usuarios) {
            Vector user = new Vector<String>();
            user.add(usuario);
            user.add(perfil.get(usuario));
            this.usuarios.add(user);
        }
        this.usuario = usuarios;
        this.palavras = palavras;
        initComponents();
    }

    public HashSet<String> getUsuarios(){
        HashSet<String> ret = new HashSet<String>();
        for (Vector user : usuarios) {
            ret.add(user.get(0).toString());
        }
        return ret;
    }

    public HashMap<String,Double> getLimite(){
        HashMap<String,Double> ret = new HashMap<String,Double>();
        for (Vector user : usuarios) {
            ret.put(user.get(0).toString(), Double.parseDouble(user.get(1).toString()));
        }
        return ret;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jToolBar = new javax.swing.JToolBar();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(palavras.getString("Manage Users")); // NOI18N
        setResizable(false);

        jToolBar.setFloatable(false);

        jButtonAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ispd/gui/imagens/insert-object.png"))); // NOI18N
        jButtonAdicionar.setText(palavras.getString("Add")); // NOI18N
        jButtonAdicionar.setFocusable(false);
        jButtonAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdicionar.setMaximumSize(new java.awt.Dimension(45, 45));
        jButtonAdicionar.setMinimumSize(new java.awt.Dimension(45, 45));
        jButtonAdicionar.setPreferredSize(new java.awt.Dimension(45, 45));
        jButtonAdicionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });
        jToolBar.add(jButtonAdicionar);

        jButtonRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ispd/gui/imagens/window-close.png"))); // NOI18N
        jButtonRemover.setText(palavras.getString("Remove")); // NOI18N
        jButtonRemover.setFocusable(false);
        jButtonRemover.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRemover.setMaximumSize(new java.awt.Dimension(45, 45));
        jButtonRemover.setMinimumSize(new java.awt.Dimension(45, 45));
        jButtonRemover.setPreferredSize(new java.awt.Dimension(45, 45));
        jButtonRemover.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });
        jToolBar.add(jButtonRemover);

        jButtonOk.setText(palavras.getString("OK")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jTable1.setModel(new DefaultTableModel(this.usuarios,this.perfis){ public boolean isCellEditable(int rowIndex, int columnIndex) {
            return true;
        }});
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 145, Short.MAX_VALUE)
                        .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOk)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String add = JOptionPane.showInputDialog(this, palavras.getString("Enter the name"), palavras.getString("Add"), JOptionPane.QUESTION_MESSAGE);
        //String[] ops = {"Consumo mínimo", "No Perfil", "Desempenho Máximo"};
        Double result = Double.parseDouble(JOptionPane.showInputDialog(this, "Enter user power comsumption limit"));

        if(!usuario.contains(add) && !add.equals("")){
            usuario.add(add);
            Vector user = new Vector<String>();
            user.add(add);
            user.add(result);
            this.usuarios.add(user);
            jScrollPane1.setViewportView(jTable1);
        }
    }

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            String perfil = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            int escolha = JOptionPane.showConfirmDialog(this, palavras.getString("Are you sure want delete this user:") + perfil, null, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (escolha == JOptionPane.YES_OPTION) {
                usuario.remove(perfil);
                usuarios.remove(jTable1.getSelectedRow());
                jScrollPane1.setViewportView(jTable1);
            }
        } else {
            JOptionPane.showMessageDialog(this, palavras.getString("A user should be selected"));
        }
    }

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.setVisible(false);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar;
    // End of variables declaration
    private Vector<Vector> usuarios;
    private Vector<String> perfis;
    private HashSet<String> usuario;
}

